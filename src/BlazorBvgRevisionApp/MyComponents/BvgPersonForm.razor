@using System.Globalization
@using BlazorBvgRevisionApp.MyComponents.Models
@using Domain.Enums

<MudGrid>
    <MudItem md="4" xs="12">
        <MudNumericField T="int" Label="Ausstellungsjahr" Min="2023" Step="1" @bind-Value="@Person.ValidityYearCertificate"
                         HelperText="Gültigkeit der Werte auf dem Vorsorgeausweis"
                         HelperTextOnFocus="true"
                         Placeholder="Gültigkeitsjahr"/>
    </MudItem>

    <MudItem md="4" xs="12">
        <MudDatePicker Label="Geburtsdatum" Editable="true" @bind-Date="@Person.DateOfBirth" DateFormat="yyyy-MM-dd" Required="true" RequiredError="" Placeholder="Geburtstag" Mask="@(new DateMask("0000-00-00"))"/>
    </MudItem>

    <MudItem md="4" xs="12">
        <GenderSelector Label="Geschlecht" SelectedGender="@gender" OnSelected="@(SetGender)" />
    </MudItem>

    <MudItem md="4">
        <MudNumericField Label="AHV-Jahreslohn" Format="n0" Min="0" Step="1000" @bind-Value="Person.ReportedSalary" Culture="CultureInfo.InvariantCulture"/>
    </MudItem>

    <MudItem md="4">
        <MudNumericField Label="Kapital Ende Jahr" Format="n0" Min="0" Step="1000" @bind-Value="Person.BvgRetirementCapitalEndOfYear"
                         HelperTextOnFocus="true"
                         HelperText="Gesamtes Altersguthaben gemäss BVG"
                         Culture="CultureInfo.InvariantCulture" />
    </MudItem>

    <MudItem md="4">
        <MudNumericField Label="PK Kapital Schlussalter" Format="n0" Min="0" Step="1000" @bind-Value="Person.FinalRetirementCapital"
                         HelperTextOnFocus="true"
                         HelperText="Gesamtes Altersguthaben bei Ihrer Pensionskasse bei Pensionierung"
                         Culture="CultureInfo.InvariantCulture" />
    </MudItem>

</MudGrid>

@code {
    private Gender? gender;

    [Parameter] public required BvgPersonViewModel Person { get; set; }

    protected override void OnParametersSet()
    {
        if (Person.Gender != Gender.Undefined)
        {
            gender = Person.Gender;
        }
    }

    private void SetGender(Gender? g)
    {
        gender = g;
        if (g.HasValue)
        {
            Person.Gender = g.Value;
        }
    }
}