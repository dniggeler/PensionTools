@using System.Globalization
@using System.Threading
@inherits LayoutComponentBase

<RadzenDialog />
<RadzenNotification />
<RadzenTooltip />
<RadzenContextMenu />

<RadzenHeader>
    <ChildContent>
        <div class="row justify-content-start align-items-center">
            <div class="col-6 d-flex align-items-center">
                <RadzenSidebarToggle Click="@SidebarToggle0Click"></RadzenSidebarToggle>
                <RadzenLabel Text="PensionTools"></RadzenLabel>
            </div>
            <div class="col-6 text-right">
                <RadzenSplitButton Icon="language" Style="background-color: #479cc8" Click="@(SetCulture)">
                    <ChildContent>
                        <RadzenSplitButtonItem Text="DE" Value="1"/>
                        <RadzenSplitButtonItem Text="EN" Value="2" />
                    </ChildContent>
                </RadzenSplitButton>
            </div>
        </div>
    </ChildContent>
</RadzenHeader>
<RadzenBody @ref="body0">
    <ChildContent>
        <RadzenContentContainer Name="main">
            @Body
        </RadzenContentContainer>
    </ChildContent>
</RadzenBody>
<RadzenSidebar @ref="sidebar0">
    <ChildContent>
        <RadzenPanelMenu style="height: 100%">
            <ChildContent>
                <RadzenPanelMenuItem Text="Personen" Path="PersonListing"></RadzenPanelMenuItem>
                <RadzenPanelMenuItem Text="Steuerrechner" Path="TaxCalculation"></RadzenPanelMenuItem>
                <RadzenPanelMenuItem Text="Finanzplanung" Path="WealthPlanning"></RadzenPanelMenuItem>
            </ChildContent>
        </RadzenPanelMenu>
    </ChildContent>
</RadzenSidebar>
<RadzenFooter>
    <ChildContent>
        <RadzenLabel Text="PensionTools, Copyright Ⓒ 2021">
        </RadzenLabel>
    </ChildContent>
</RadzenFooter>

@code {
    [Inject]
    protected NavigationManager UriHelper { get; set; }

    [Inject]
    protected DialogService DialogService { get; set; }

    [Inject]
    protected TooltipService TooltipService { get; set; }

    [Inject]
    protected ContextMenuService ContextMenuService { get; set; }

    [Inject]
    protected NotificationService NotificationService { get; set; }

    protected RadzenBody body0;
    protected RadzenSidebar sidebar0;

    public async Task SidebarToggle0Click()
    {
        await InvokeAsync(() => { sidebar0.Toggle(); });

        await InvokeAsync(() => { body0.Toggle(); });
    }

    private void SetCulture()
    {
        CultureInfo.DefaultThreadCurrentCulture = CultureInfo.DefaultThreadCurrentUICulture =
            Thread.CurrentThread.CurrentCulture = Thread.CurrentThread.CurrentUICulture = new CultureInfo("de-CH");
    }

}