@using PensionCoach.Tools.CommonTypes
@using PensionCoach.Tools.CommonTypes.Tax
@using Microsoft.Extensions.Localization
@using BlazorApp.Resources

@inject DialogService dialogService
@inject IStringLocalizer<Resource> localizer

<EditForm Model="@Person" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary /> 
    <RadzenFieldset Text="Details">
        <div class="col-md-12">
            <RadzenTextBox @bind-Value="@Person.Name" Placeholder="@localizer["person.name"]"/>
            <RadzenDatePicker @bind-Value="@Person.DateOfBirth" DateFormat="d.M.yyyy" Placeholder="@localizer["person.birthdate"]"/>
        </div>
    </RadzenFieldset>

    <div class="row">
        <div class="col-xl-6">
            <div>
                <div class="mt-3">@localizer["person.gender"]</div>
                <div class="mt-3">
                    <GenderSelector SelectedGender="@Person.Gender" OnSelected="@(args => Person.Gender = args)"/>
                </div>

                <div class="mt-3">Zivilstand</div>
                <div class="mt-3">
                    <CivilStatusSelector SelectedCivilStatus="@Person.CivilStatus" OnSelected="@(args => Person.CivilStatus = args)"/>
                </div>

                <div class="mt-3">Konfession</div>
                <div class="mt-3">
                    <ReligiousGroupSelector
                        SelectedReligiousGroupType="@Person.ReligiousGroupType"
                        OnSelected="@(r => Person.ReligiousGroupType = r ?? ReligiousGroupType.Other)" />
                </div>

                @if (Person.CivilStatus == CivilStatus.Married)
                {
                    <div class="mt-3">Konfession (Partner)</div>
                    <div class="mt-3">
                        <ReligiousGroupSelector
                            SelectedReligiousGroupType="@Person.PartnerReligiousGroupType"
                            OnSelected="@(r => Person.PartnerReligiousGroupType = r)" />
                    </div>
                }
            </div>
        </div>
        <div class="col-xl-6">
            <div>
                <div class="mt-3">Kanton</div>
                <b>@Person.Canton</b>

                <div class="mt-3">Wohnort</div>
                <MunicipalitySelector
                BfsMunicipalityId="Person.BfsMunicipalityId"
                OnSelected="HandleSetResidence"/>

                <div class="mt-3">Steuerbares Einkommen</div>
                <div class="col-md-9"><RadzenNumeric TValue="decimal" Format="n0" @bind-Value="Person.TaxableIncome"/></div>

                <div class="mt-3">Steuerbares Vermögen</div>
                <div class="col-md-9"><RadzenNumeric TValue="decimal" Format="n0" @bind-Value="Person.TaxableWealth"/></div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 text-right mt-2">
            <RadzenButton Icon="done" Style="width: 60px" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Secondary"/>
        </div>
    </div>

</EditForm>

@code
{
    [Parameter]
    public PersonViewModel Person { get; set; }

    private void HandleValidSubmit()
    {
        dialogService.Close(true);
    }

    private void HandleSetResidence(TaxSupportedMunicipalityModel municipalityModel)
    {
        Person.BfsMunicipalityId = municipalityModel.BfsMunicipalityNumber;
        Person.Canton = municipalityModel.Canton;
        Person.MunicipalityName = municipalityModel.Name;
    }
}
