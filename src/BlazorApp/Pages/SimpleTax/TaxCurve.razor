@using LanguageExt
@using ApexCharts;

@inject IApexChartConfigurator ChartConfigurator

<ApexChart TItem="CurvePoint"
           Title="@CurveTitle"
           Options="@options"
           FormatYAxisLabel="GetYAxisLabel"
           XAxisType="XAxisType.Numeric"
           Height="450">

    <ApexPointSeries TItem="CurvePoint"
                     Items="@CurvePoints"
                     Name="@YAxisTitle"
                     SeriesType="SeriesType.Line"
                     OrderBy="@(e => e.X)"
                     XValue="@(e => e.XValue)"
                     YValue="@(e => e.YValue)"/>
</ApexChart>

@code {
    const string PrimaryColorLight = "#594ae2ff";
    const string PrimaryColorDark = "#776be7ff";

    const string SecondaryColorLight = "#00c853ff";
    const string SecondaryColorDark = "#0bba83ff";

    public record CurvePoint
    {
        public int XValue { get; set; }
        public decimal YValue { get; set; }
    }

    private ApexChartOptions<CurvePoint> options = new();

    [CascadingParameter] public bool IsDarkMode { get; set; }

    [Parameter] public CurvePoint CurrentPoint { get; set; }
    [Parameter] public CurvePoint[] CurvePoints { get; set; }

    [Parameter] public int XMin { get; set; }
    [Parameter] public int XMax { get; set; }

    [Parameter] public string CurveTitle { get; set; }

    [Parameter] public string XAxisTitle { get; set; }
    [Parameter] public string YAxisTitle { get; set; }

    [Parameter] public bool IsInPercent { get; set; }

    protected override void OnInitialized()
    {
        var configurator = ChartConfigurator.CurvePointOptions(IsDarkMode);

        options = new ApexChartOptions<CurvePoint>
        {
            Chart = configurator.Chart,
            Stroke = new Stroke
            {
                Curve = Curve.Stepline,
                Colors = new List<string> { PrimaryColor, SecondaryColor },
                Width = 2
            },
            Grid = configurator.Grid,
        };
    }

    protected override void OnParametersSet()
    {
        options.Stroke.Colors = new List<string> { PrimaryColor, SecondaryColor };

        var axisColor = IsDarkMode
        ? "lightgrey"
        : "grey";

        options.Title = new Title
        {
            Style = new TitleStyle
            {
                Color = axisColor
            }
        };

        options.Xaxis = new XAxis
        {
            Title = new AxisTitle
            {
                OffsetY = 5,
                    Text = XAxisTitle,
                Style = new AxisTitleStyle
                {
                        Color = axisColor
                },

            },
            Labels = new XAxisLabels
            {
                Style = new AxisLabelStyle
                {
                    Colors = new ApexCharts.Color(axisColor)
                }
            },
        };

        options.Yaxis = new List<YAxis>
        {
            new()
            {
                Title = new AxisTitle
                {
                    OffsetX = 5,
                    Text = YAxisTitle,
                    Style = new AxisTitleStyle
                    {
                        Color = axisColor
                    }
                },
                Labels = new YAxisLabels
                {
                    Style = new AxisLabelStyle
                    {
                        Colors = new ApexCharts.Color(axisColor)
                    }
                },
                TickAmount = 5,
                DecimalsInFloat = 2,
            }
        };

        options.Annotations = new Annotations()
        {
            Points = new List<AnnotationsPoint>
            {
                new()
                {
                    X = CurrentPoint.XValue,
                    Y = Convert.ToDouble(CurrentPoint.YValue),
                    Label = new Label
                    {
                        Text = "Aktuelles Einkommen",
                    },
                    Marker = new AnnotationMarker()
                    {
                        StrokeColor = "red",
                        Radius = 2,
                    }
                }
            }
        };
    }

    private IEnumerable<CurvePoint> SingleCurvePoint => new List<CurvePoint>{ CurrentPoint, CurrentPoint with { YValue = 0 } };

    private string PrimaryColor => IsDarkMode ? PrimaryColorDark : PrimaryColorLight;
    private string SecondaryColor => IsDarkMode ? SecondaryColorDark : SecondaryColorLight;

    private string GetYAxisLabel(decimal value)
    {
        return value.ToString(IsInPercent ?"P1" : "N0");
    }
}
