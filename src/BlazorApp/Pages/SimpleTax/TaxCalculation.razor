@page "/SimpleTax/TaxCalculation"

@using PensionCoach.Tools.CommonTypes.Tax
@using System.Text.Json

@inject IPersonService PersonService
@inject ITaxCalculationService TaxCalculationService

<MudPaper Class="mb-4 pa-6 align-center" Elevation="0">
    <MudGrid>
        <MudItem md="12">
            <MudText Typo="Typo.h5">Steuerberechnung</MudText>
        </MudItem>
        <MudItem md="12">

            <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">

                <MudTabPanel Text="Auswahl">
                    <MudGrid>
                        <MudItem md="4">
                            <MudText Typo="Typo.body2">
                                Die Cashflow-Simulation basiert auf Angaben zur Person sowie steuerrevelanten Daten wie Wohnort, Einkommen und Vermögen.
                            </MudText>
                        </MudItem>
                        <MudItem md="8">
                            <PersonSelector Persons="persons" OnSelect="@HandleSelectPerson"/>
                        </MudItem>
                    </MudGrid>
                </MudTabPanel>

                <MudTabPanel Text="Steuerdaten" Disabled="@(selectedPerson is null)">
                    <MudGrid>
                        <MudItem md="4">
                            <MudText Typo="Typo.body2">
                                Steuerlich relevante Angaben zur Person sind der Zivilstand,
                                die Konfession und, falls verheiratet, die Konfession der Partnerin. Daneben gibt es auch Angaben wie das Alter,
                                welche zwar für die Berechnung der Steuern irrelevant sind, aber Geldflüsse in der Vorsorge wirken.
                                Der aktuelle Lohn und das derzeitige Vermögen sind der Startpunkt für Vermögensentwicklung über die Zeit.
                            </MudText>
                        </MudItem>
                        <MudItem md="8">
                            <PersonDetails IsReadOnly="false" Person="@selectedPerson"/>
                        </MudItem>
                    </MudGrid>
                </MudTabPanel>

                <MudTabPanel Text="Simulation" Disabled="@(selectedPerson is null)">
                    <MudGrid>
                        <MudItem md="4">
                            <MudText Typo="Typo.body2">
                                Das Ergebnis einer Simulation lässt sich von weiteren Parametern steuern.
                            </MudText>
                        </MudItem>
                        <MudItem md="8">

                        </MudItem>
                    </MudGrid>
                </MudTabPanel>

            </MudTabs>

        </MudItem>
        
        <MudItem md="12">
            <MudButton OnClick="Calculate" Variant="Variant.Filled" Color="Color.Primary" Disabled="@(selectedPerson == null)">Berechne</MudButton>
        </MudItem>
    </MudGrid>
</MudPaper>

@if (taxResponse != null)
{
    <MudExpansionPanels>
        <MudExpansionPanel Text="Result Steuerberechnung">
            <Content>
                <MudPaper Elevation="-1">
                    <MudText Typo="Typo.h6">Rohdaten</MudText>
                    <MudText Typo="Typo.body2">@(JsonSerializer.Serialize(taxResponse))</MudText>>
                </MudPaper>
            </Content>
        </MudExpansionPanel>
    </MudExpansionPanels>
    

    <RadzenPanel AllowCollapse="true">
        <div class="container">
            <div class="row">
                <div class="col-lg-3">
                    <RadzenLabel Text="@taxResponse.Name"/>
                </div>
                <div class="col-lg-9">
                    <RadzenTree>
                        <RadzenTreeItem Text="@("Total Steuerbetrag: " + taxResponse.TotalTaxAmount)" Expanded="false">
                            <ChildContent>
                                <RadzenTreeItem Text=@("Gemeindesteuer: " + taxResponse.MunicipalityTaxAmount)/>
                                <RadzenTreeItem Text=@("Staatssteuer: " + taxResponse.CantonTaxAmount)/>
                                <RadzenTreeItem Text=@("Bundessteuer: " + taxResponse.FederalTaxAmount)/>
                                <RadzenTreeItem Text=@("Vermögenssteuer: " + taxResponse.WealthTaxAmount)/>
                                <RadzenTreeItem Text="Details" Expanded="false">
                                    <ChildContent>
                                    </ChildContent>
                                </RadzenTreeItem>
                            </ChildContent>
                        </RadzenTreeItem>
                    </RadzenTree>

                    <RadzenDataGrid AllowFiltering="false" AllowColumnResize="false" AllowPaging="false" AllowSorting="false"
                                    Data="@(GetFullTaxResponses())" TItem="FullTaxResponse">
                        <Columns>
                            <RadzenDataGridColumn TItem="FullTaxResponse" Property="Name" Filterable="false" Title="Name" TextAlign="TextAlign.Center"/>
                            <RadzenDataGridColumn TItem="FullTaxResponse" Property="TotalTaxAmount" Filterable="false" Title="Total Steuerbetrag" TextAlign="TextAlign.Right"/>
                            <RadzenDataGridColumn TItem="FullTaxResponse" Property="MunicipalityTaxAmount" Filterable="false" Title="Gemeindesteuer" TextAlign="TextAlign.Right"/>
                            <RadzenDataGridColumn TItem="FullTaxResponse" Property="CantonTaxAmount" Filterable="false" Title="Staatssteuer" TextAlign="TextAlign.Right"/>
                            <RadzenDataGridColumn TItem="FullTaxResponse" Property="FederalTaxAmount" Filterable="false" Title="Bundessteuer" TextAlign="TextAlign.Right"/>
                            <RadzenDataGridColumn TItem="FullTaxResponse" Property="WealthTaxAmount" Filterable="false" Title="Vermögenssteuer" TextAlign="TextAlign.Right"/>
                            <RadzenDataGridColumn TItem="FullTaxResponse" Property="ChurchTaxAmount" Filterable="false" Title="Kirchensteuer" TextAlign="TextAlign.Right"/>
                        </Columns>
                    </RadzenDataGrid>
                </div>
            </div>
        </div>
    </RadzenPanel>
}

@code
{
    private FullTaxRequest taxRequest = new();
    private FullTaxResponse taxResponse;
    private PersonViewModel selectedPerson;
    private IReadOnlyCollection<PersonViewModel> persons;
    private int[] supportedTaxYears;

    protected override async Task OnInitializedAsync()
    {
        Task<int[]> yearsTask = TaxCalculationService.SupportedTaxYearsAsync();
        persons = (await PersonService.GetPersonsAsync()).ToList();

        supportedTaxYears = await yearsTask;
    }

    private IEnumerable<FullTaxResponse> GetFullTaxResponses()
    {
        return new[] { taxResponse };
    }

    private void HandleSelectPerson(Guid personId)
    {
        selectedPerson = persons.Single(item => item.Id == personId);

        if (selectedPerson == null)
        {
            return;
        }


        taxRequest = new FullTaxRequest
        {
            Name = selectedPerson.Name,
            CivilStatus = selectedPerson.CivilStatus,
            TaxableIncome = selectedPerson.TaxableIncome,
            TaxableWealth = selectedPerson.TaxableWealth,
            TaxableFederalIncome = selectedPerson.TaxableIncome,
            PartnerReligiousGroup = selectedPerson.PartnerReligiousGroupType,
            ReligiousGroup = selectedPerson.ReligiousGroupType,
            BfsMunicipalityId = selectedPerson.BfsMunicipalityId,
            CalculationYear = supportedTaxYears.Max()
        };
    }

    private async Task Calculate()
    {
        taxResponse = await TaxCalculationService.CalculateAsync(taxRequest);
    }
}