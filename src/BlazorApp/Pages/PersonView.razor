@using PensionCoach.Tools.CommonTypes
@using Microsoft.Extensions.Localization
@using BlazorApp.Resources

@inject IStringLocalizer<Resource> Localizer

<MudContainer Data=@Person>
    <MudPaper Elevation="1" Class="ma-4 pa-4">

        <MudGrid>
            <MudItem md="6">
                <MudText Typo="Typo.h6">@Person.Name</MudText>
            </MudItem>
            <MudItem md="6">
                <MudPaper Elevation="0" Class="d-flex justify-end">
                    @if (OnEdit.HasDelegate)
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" Click="@HandleEdit"/>
                    }

                    @if (OnCopy.HasDelegate)
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.ContentCopy" Click="@HandleCopy"/>
                    }

                    @if (OnDelete.HasDelegate)
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Click="@HandleDelete"/>
                    }
                </MudPaper>
            </MudItem>

            <MudItem md="4">
                <div class="mt-3">@Localizer["person.birthdate"]</div>
                <MudDatePicker Disabled="true" @bind-Value="@Person.DateOfBirth" DateFormat="d.M.yyyy" Placeholder="@Localizer["person.birthdate"]" />

                <div class="mt-3">@Localizer["person.gender"]</div>
                <GenderSelector IsReadOnly="true" SelectedGender="@Person.Gender" />

                <div class="mt-3">Zivilstand</div>
                <CivilStatusSelector IsReadOnly="true" SelectedCivilStatus="@Person.CivilStatus" />

                <div class="mt-3">Konfession</div>
                <ReligiousGroupSelector IsReadOnly="true" SelectedReligiousGroupType="@Person.ReligiousGroupType" />

                @if (Person.CivilStatus == CivilStatus.Married)
                {
                    <div class="mt-3">Konfession (Partner)</div>
                    <ReligiousGroupSelector IsReadOnly="true" SelectedReligiousGroupType="@Person.PartnerReligiousGroupType" />
                }
            </MudItem>

            <MudItem md="4">
                <div class="mt-3">Kanton</div>
                <b>@Person.Canton</b>

                <div class="mt-3">@Localizer["person.residence"]</div>
                <b>@Person.MunicipalityName</b>

                <div class="mt-3">@Localizer["person.taxableincome"]</div>
                <b>@Person.TaxableIncome</b>

                <div class="mt-3">@Localizer["person.taxablewealth"]</div>
                <b>@Person.TaxableWealth</b>
            </MudItem>

            <MudItem md="4">
                <div class="mt-3">Altersguthaben PK</div>
                <b>@Person.FinalRetirementCapital</b>

                <div class="mt-3">3a Guthaben</div>
                <b>@Person.FinalCapital3a</b>
            </MudItem>
        </MudGrid>
    </MudPaper>

</MudContainer>

@code
{
    [Parameter]
    public PersonViewModel Person { get; set; }

    [Parameter]
    public EventCallback<Guid> OnDelete { get; set; }

    [Parameter]
    public EventCallback<Guid> OnEdit { get; set; }

    [Parameter]
    public EventCallback<Guid> OnCopy { get; set; }

    private Task HandleDelete()
    {
        return OnDelete.InvokeAsync(Person.Id);
    }

    private Task HandleCopy()
    {
        return OnCopy.InvokeAsync(Person.Id);
    }

    private Task HandleEdit()
    {
        return OnEdit.InvokeAsync(Person.Id);
    }
}
