@page "/WealthPlanning"
@using PensionCoach.Tools.CommonTypes
@using Microsoft.Extensions.Logging
@using System.Text.Json
@using PensionCoach.Tools.CommonTypes.MultiPeriod
@using PensionCoach.Tools.CommonTypes.Tax

@inject ILogger<WealthPlanning> logger;

<RadzenTemplateForm TItem="MultiPeriodRequest" Data=@model Submit=@OnSubmit InvalidSubmit=@OnInvalidSubmit>
    <RadzenContent Container="main">
        <ChildContent>
            <RadzenHeading Size="H1" Text="Finanzplanung">
            </RadzenHeading>
            <RadzenSteps NextText="Nächster" PreviousText="Vorheriger">
                <Steps>
                    <RadzenStepsItem Text="Steuerperson" Selected="true">
                        <ChildContent>
                            <RadzenCard>
                                <ChildContent>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <h3>Name</h3>
                                            <RadzenTextBox Name="Name" @bind-Value="model.Name"></RadzenTextBox>
                                        </div>

                                        <div class="col-md-6">
                                            <h3>Zivilstand</h3>
                                            <RadzenRadioButtonList Name="CivilStatus"
                                                                   TValue="int"
                                                                   Value=@((int)taxPerson.CivilStatus)
                                                                   Change=@(args => { taxPerson.CivilStatus = (CivilStatus)args; })>
                                                <Items>
                                                    <RadzenRadioButtonListItem Text="Ledig" Value="1" />
                                                    <RadzenRadioButtonListItem Text="Verheiratet" Value="2" />
                                                </Items>
                                            </RadzenRadioButtonList>
                                        </div>

                                        <div class="col-md-12">
                                            <h3>Konfession</h3>
                                            <RadzenRadioButtonList Name="ReligousGroup"
                                                                   TValue="int"
                                                                   Value=@((int)taxPerson.ReligiousGroupType)
                                                                   Change=@(args => { taxPerson.ReligiousGroupType = (ReligiousGroupType)args; })>
                                                <Items>
                                                    <RadzenRadioButtonListItem Text="andere" Value="0" />
                                                    <RadzenRadioButtonListItem Text="evangelisch" Value="1" />
                                                    <RadzenRadioButtonListItem Text="christ-katholisch" Value="2" />
                                                    <RadzenRadioButtonListItem Text="römisch-katholisch" Value="3" />
                                                </Items>
                                            </RadzenRadioButtonList>
                                        </div>
                                        @if (taxPerson.CivilStatus == CivilStatus.Married)
                                        {
                                            <div class="col-md-12">
                                                <h3>Konfession Partner</h3>
                                                <RadzenRadioButtonList Name="ReligousGroupPartner"
                                                                       TValue="int"
                                                                       Change=@(args => { taxPerson.PartnerReligiousGroupType = (ReligiousGroupType)args; })
                                                                       Value=@((int)(taxPerson.PartnerReligiousGroupType ?? ReligiousGroupType.Other))>
                                                    <Items>
                                                        <RadzenRadioButtonListItem Text="andere" Value="0" />
                                                        <RadzenRadioButtonListItem Text="evangelisch" Value="1" />
                                                        <RadzenRadioButtonListItem Text="christ-katholisch" Value="2" />
                                                        <RadzenRadioButtonListItem Text="römisch-katholisch" Value="3" />
                                                    </Items>
                                                </RadzenRadioButtonList>
                                            </div>
                                        }
                                    </div>
                                </ChildContent>
                            </RadzenCard>
                        </ChildContent>
                    </RadzenStepsItem>
                    <RadzenStepsItem Text="Steuerdaten">
                        <ChildContent>
                            <RadzenCard>
                                <ChildContent>
                                    <div class="row">
                                        <div class="col-md-4">
                                            <h3>Steuerbarer Lohn</h3>
                                            <RadzenNumeric TValue="decimal" Format="n0" @bind-Value="model.Income" />
                                        </div>
                                        <div class="col-md-4">
                                            <h3>Steuerbares Vermögen</h3>
                                            <RadzenNumeric TValue="decimal" Format="n0" @bind-Value="model.Wealth" />
                                        </div>
                                        <div class="col-md-4">
                                            <h3>Steuergemeinde</h3>
                                            <RadzenDropDown TextProperty="Name"
                                                            ValueProperty="BfsNumber"
                                                            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                                            FilterOperator="StringFilterOperator.StartsWith"
                                                            AllowFiltering="true"
                                                            Change=@(args => OnChangeMunicipality(args, "DropDown with custom filter operator"))
                                                            @bind-Value="model.BfsMunicipalityId"
                                                            Data="municipalities" />
                                        </div>
                                    </div>
                                </ChildContent>
                            </RadzenCard>
                        </ChildContent>
                    </RadzenStepsItem>
                    <RadzenStepsItem Text="Simulation">
                        <ChildContent>
                            <RadzenCard>
                                <ChildContent>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <h3>Berechnungsjahr</h3>
                                            <RadzenNumeric TValue="int" @bind-Value="model.StartingYear" />
                                        </div>
                                        <div class="col-md-6">
                                            <h3>Anzahl Perioden: @model.NumberOfPeriods</h3>
                                            <RadzenSlider TValue="int" @bind-Value="model.NumberOfPeriods" Min="1" Max="50" />
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12 text-right">
                                            <RadzenButton ButtonType="ButtonType.Submit" Text="Berechne"></RadzenButton>
                                        </div>
                                    </div>
                                </ChildContent>
                            </RadzenCard>
                        </ChildContent>
                    </RadzenStepsItem>
                </Steps>
            </RadzenSteps>
        </ChildContent>
    </RadzenContent>
</RadzenTemplateForm>

@code {

    private MultiPeriodRequest model = GetDefaultValues();
    private readonly TaxPerson taxPerson = DefaultTaxPerson.GetDefaultValues();
    private IReadOnlyCollection<MunicipalityModel> municipalities = new List<MunicipalityModel>();

    protected override Task OnInitializedAsync()
    {
        municipalities = new List<MunicipalityModel>
        {
            new()
            {
                BfsNumber = 261,
                Canton = Canton.ZH,
                Name = "Zürich",
            },
            new()
            {
                BfsNumber = 136,
                Canton = Canton.ZH,
                Name = "Langnau a.A.",
            },
            new()
            {
                BfsNumber = 139,
                Canton = Canton.ZH,
                Name = "Rüschlikon",
            },
            new()
            {
                BfsNumber = 3426,
                Canton = Canton.SG,
                Name = "Zuzwil",
            }
        };

        return base.OnInitializedAsync();
    }

    private void OnChangeMunicipality(object args, string dropdownWithCustomFilterOperator)
    {
        logger.LogInformation("municipality changed");
    }

    private void OnSubmit(MultiPeriodRequest model)
    {
        logger.LogInformation($"Submit {JsonSerializer.Serialize(model)}");
    }

    private void OnInvalidSubmit(FormInvalidSubmitEventArgs args)
    {
        logger.LogInformation("InvalidSubmit");
    }

    private static MultiPeriodRequest GetDefaultValues()
    {
        return new MultiPeriodRequest
        {
            Name = "Toni",
            CivilStatus = CivilStatus.Single,
            ReligiousGroupType = ReligiousGroupType.Protestant,
            PartnerReligiousGroupType = null,
            Income = 100_000,
            Wealth = 500_000,
            BfsMunicipalityId = 139,
            NumberOfPeriods = 10,
            StartingYear = 2021,
        };
    }
}
