@inject IStringLocalizer<Resource> Localizer

<MudPaper Elevation="0">

    <MudGrid>
        <MudItem md="12">
            <MudPaper Elevation="0" Class="d-flex justify-end ma-0 pa-0">
                @if (OnEdit.HasDelegate)
                {
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" OnClick="@HandleEdit"/>
                }

                @if (OnCopy.HasDelegate)
                {
                    <MudIconButton Icon="@Icons.Material.Filled.ContentCopy" OnClick="@HandleCopy"/>
                }

                @if (OnDelete.HasDelegate)
                {
                    <MudIconButton Icon="@Icons.Material.Filled.Delete" OnClick="@HandleDelete"/>
                }
            </MudPaper>
        </MudItem>

        <MudItem md="12">
            <PersonDetails Person="@Person" IsReadOnly="true"/>
        </MudItem>

    </MudGrid>
</MudPaper>


@code
{
    [Parameter]
    public PersonViewModel Person { get; set; }

    [Parameter]
    public EventCallback<Guid> OnDelete { get; set; }

    [Parameter]
    public EventCallback<Guid> OnEdit { get; set; }

    [Parameter]
    public EventCallback<Guid> OnCopy { get; set; }

    private DateTime? GetBirthDate()
    {
        return Person.DateOfBirth;
    }

    private Task HandleDelete()
    {
        return OnDelete.InvokeAsync(Person.Id);
    }

    private Task HandleCopy()
    {
        return OnCopy.InvokeAsync(Person.Id);
    }

    private Task HandleEdit()
    {
        return OnEdit.InvokeAsync(Person.Id);
    }
}