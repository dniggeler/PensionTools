@using Microsoft.AspNetCore.Components
@using PensionCoach.Tools.TaxComparison
@using Radzen
@using Radzen.Blazor

@inject IExportService ExportService

@if (SelectedPerson is not null)
{
    <RadzenPanel AllowCollapse="true">
        <div class="container">
            <div class="row">
                <div class="col-lg-4">
                    <RadzenCard Visible="@(SelectedPerson is not null)">
                        <RadzenText TextStyle="TextStyle.H6">
                            <strong>Meine Wohngemeinde</strong>
                        </RadzenText>
                        <div class="row">
                            <div class="col-md-6">
                                <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Gemeinde</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1">
                                    <b>@(SelectedPerson.MunicipalityName)</b>
                                </RadzenText>
                                <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Kanton</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1">
                                    <b>@(SelectedPerson.Canton)</b>
                                </RadzenText>
                            </div>
                            <div class="col-md-6">
                                <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Steuertotal</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1">
                                    <b>@String.Format(new System.Globalization.CultureInfo("de-CH"), "{0:F0}", GetMyMunicipalityTaxAmount())</b>
                                </RadzenText>
                            </div>
                        </div>
                    </RadzenCard>
                </div>
                <div class="col-lg-4">
                    <RadzenCard Visible="@(minimalTaxResult is not null)">
                        <RadzenText TextStyle="TextStyle.H6">
                            <strong>Minimale Belastung</strong>
                        </RadzenText>
                        <div class="row">
                            <div class="col-md-6">
                                <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Gemeinde</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1">
                                    <b>@(minimalTaxResult.MunicipalityName)</b>
                                </RadzenText>
                                <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Kanton</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1">
                                    <b>@(minimalTaxResult.Canton)</b>
                                </RadzenText>
                            </div>
                            <div class="col-md-6">
                                <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Steuertotal</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1">
                                    <b>@String.Format(new System.Globalization.CultureInfo("de-CH"), "{0:F0}", minimalTaxResult.TotalTaxAmount)</b>
                                </RadzenText>
                            </div>
                        </div>
                    </RadzenCard>
                </div>
                <div class="col-lg-4">
                    <RadzenCard Visible="@(maximalTaxResult is not null)">
                        <RadzenText TextStyle="TextStyle.H6">
                            <strong>Maximale Belastung</strong>
                        </RadzenText>
                        <div class="row">
                            <div class="col-md-6">
                                <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Gemeinde</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1">
                                    <b>@(maximalTaxResult.MunicipalityName)</b>
                                </RadzenText>
                                <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Kanton</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1">
                                    <b>@(maximalTaxResult.Canton)</b>
                                </RadzenText>
                            </div>
                            <div class="col-md-6">
                                <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Steuertotal</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1">
                                    <b>@String.Format(new System.Globalization.CultureInfo("de-CH"), "{0:F0}", maximalTaxResult.TotalTaxAmount)</b>
                                </RadzenText>
                            </div>
                        </div>
                    </RadzenCard>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(_ => Export("excel"))" Class="mb-4 mr-2"/>
                </div>
                <div class="col-lg-12">
                    <RadzenDataGrid @ref="taxResultGrid" AllowFiltering="true" AllowColumnResize="false" AllowPaging="true" AllowSorting="true"
                                    FilterMode="FilterMode.Simple" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" LogicalFilterOperator="LogicalFilterOperator.And"
                                    Data="@TaxCompareResultModels" TItem="TaxComparerResultReportModel">
                        <Columns>
                            <RadzenDataGridColumn TItem="TaxComparerResultReportModel" Property="MunicipalityName" Filterable="true" Title="Name" TextAlign="TextAlign.Left"/>
                            <RadzenDataGridColumn TItem="TaxComparerResultReportModel" Property="Canton" Filterable="true" Title="Kanton" TextAlign="TextAlign.Center"/>
                            <RadzenDataGridColumn TItem="TaxComparerResultReportModel" Property="TotalTaxAmount" Filterable="false" Title="Total" TextAlign="TextAlign.Right">
                                <Template Context="resultItem">
                                    @String.Format(new System.Globalization.CultureInfo("de-CH"), "{0:F0}", resultItem.TotalTaxAmount)
                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="TaxComparerResultReportModel" Property="MunicipalityTaxAmount" Filterable="false" Title="Gemeindesteuer" TextAlign="TextAlign.Right">
                                <Template Context="resultItem">
                                    @String.Format(new System.Globalization.CultureInfo("de-CH"), "{0:F0}", resultItem.MunicipalityTaxAmount)
                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="TaxComparerResultReportModel" Property="CantonTaxAmount" Filterable="false" Title="Staatssteuer" TextAlign="TextAlign.Right">
                                <Template Context="resultItem">
                                    @String.Format(new System.Globalization.CultureInfo("de-CH"), "{0:F0}", resultItem.CantonTaxAmount)
                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="TaxComparerResultReportModel" Property="FederalTaxAmount" Filterable="false" Title="Bundessteuer" TextAlign="TextAlign.Right">
                                <Template Context="resultItem">
                                    @String.Format(new System.Globalization.CultureInfo("de-CH"), "{0:F0}", resultItem.FederalTaxAmount)
                                </Template>
                            </RadzenDataGridColumn>
                            <RadzenDataGridColumn TItem="TaxComparerResultReportModel" Property="ChurchTaxAmount" Filterable="false" Title="Kirchensteuer" TextAlign="TextAlign.Right">
                                <Template Context="resultItem">
                                    @String.Format(new System.Globalization.CultureInfo("de-CH"), "{0:F0}", resultItem.ChurchTaxAmount)
                                </Template>
                            </RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGrid>
                </div>
            </div>
        </div>
    </RadzenPanel>
}

@code
{
    private TaxComparerResultReportModel minimalTaxResult;
    private TaxComparerResultReportModel maximalTaxResult;

    private RadzenDataGrid<TaxComparerResultReportModel> taxResultGrid;

    [Parameter]
    public List<TaxComparerResultReportModel> TaxCompareResultModels { get; set; }

    [Parameter]
    public PersonViewModel SelectedPerson { get; set; }

    public void Export(string type)
    {
        ExportService.Export("Vergleich Kapitalbezugssteuer", type, new Query() 
        { 
                OrderBy = taxResultGrid.Query.OrderBy,
                Filter = taxResultGrid.Query.Filter,
                Select = string.Join(",", taxResultGrid.ColumnsCollection.Where(c => c.GetVisible()).Select(c => c.Property))
        });
    }

    public void Reload()
    {
        minimalTaxResult = GetMinimumModel();
        maximalTaxResult = GetMaximumModel();
        
        taxResultGrid.Reload();
    }

    private decimal? GetMyMunicipalityTaxAmount()
    {
        return TaxCompareResultModels.SingleOrDefault(item => item.MunicipalityId == SelectedPerson.BfsMunicipalityId)?.TotalTaxAmount;
    }

    private TaxComparerResultReportModel GetMinimumModel()
    {
        if (TaxCompareResultModels is null || TaxCompareResultModels.Count == 0)
        {
            return null;
        }

        (decimal _, int index) = TaxCompareResultModels.Select((item, i) => (item.TotalTaxAmount, i)).Min();

        return TaxCompareResultModels[index];
    }

    private TaxComparerResultReportModel GetMaximumModel()
    {
        if (TaxCompareResultModels is null || TaxCompareResultModels.Count == 0)
        {
            return null;
        }

        (decimal _, int index) = TaxCompareResultModels.Select((item, i) => (item.TotalTaxAmount, i)).Max();

        return TaxCompareResultModels[index];
    }
}
