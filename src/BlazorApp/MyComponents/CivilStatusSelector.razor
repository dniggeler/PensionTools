@using Microsoft.AspNetCore.Components
@using Microsoft.Extensions.Localization
@using PensionCoach.Tools.CommonTypes
@using BlazorApp.Resources
@using Domain.Enums

@inject IStringLocalizer<Resource> Localizer

<MudSelect T="CivilStatus" Label="@Label" ReadOnly="@IsReadOnly" Value="@SelectedCivilStatus" ValueChanged="HandleChange">
    @foreach (var m in civilStatusModels)
    {
        <MudSelectItem Value="m.Value">@m.Name</MudSelectItem>
    }
</MudSelect>

@code {
    internal class CivilStatusViewModel
    {
        public CivilStatus Value { get; set; }

        public string Name { get; set;}
    }

    [Parameter] public string Label { get; set; }
    
    [Parameter] public bool IsReadOnly { get; set; }

    [Parameter]
    public CivilStatus SelectedCivilStatus { get; set; } = CivilStatus.Undefined;

    [Parameter]
    public EventCallback<CivilStatus> OnSelected { get; set; }

    private readonly List<CivilStatusViewModel> civilStatusModels = new();

    protected override void OnInitialized()
    {
        civilStatusModels.Add(new CivilStatusViewModel { Name = "ledig", Value = CivilStatus.Single });
        civilStatusModels.Add(new CivilStatusViewModel { Name = "verheiratet", Value = CivilStatus.Married });
    }

    private async Task HandleChange(CivilStatus value)
    {
        SelectedCivilStatus = value;
        await OnSelected.InvokeAsync(value);
    }
}
