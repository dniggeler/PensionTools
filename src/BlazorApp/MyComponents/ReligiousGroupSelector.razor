@using Microsoft.AspNetCore.Components
@using Microsoft.Extensions.Localization
@using PensionCoach.Tools.CommonTypes
@using BlazorApp.Resources
@using Radzen.Blazor

@inject IStringLocalizer<Resource> localizer

<RadzenDropDown Name="partnerReligousGroup"
                Disabled="@IsReadOnly"
                Data=@religiousGroupTypes
                ValueProperty="Value"
                TextProperty="Name"
                @bind-Value="@SelectedReligiousGroupType"
                Change="@(HandleChange)">
</RadzenDropDown>

@code {

    internal class ReligiousGroupTypeViewModel
    {
        public ReligiousGroupType Value { get; set; }

        public string Name { get; set;}
    }

    [Parameter]
    public bool IsReadOnly { get; set; }

    [Parameter]
    public ReligiousGroupType? SelectedReligiousGroupType { get; set; }

    [Parameter]
    public EventCallback<ReligiousGroupType?> OnSelected { get; set; }

    private readonly List<ReligiousGroupTypeViewModel> religiousGroupTypes = new();

    protected override void OnInitialized()
    {
        religiousGroupTypes.Add(new ReligiousGroupTypeViewModel { Name = "andere", Value = ReligiousGroupType.Other });
        religiousGroupTypes.Add(new ReligiousGroupTypeViewModel { Name = "evangelisch", Value = ReligiousGroupType.Protestant });
        religiousGroupTypes.Add(new ReligiousGroupTypeViewModel { Name = "christ-katholisch", Value = ReligiousGroupType.Catholic });
        religiousGroupTypes.Add(new ReligiousGroupTypeViewModel { Name = "römisch-katholisch", Value = ReligiousGroupType.Roman });
    }

    private void HandleChange(object value)
    {
        SelectedReligiousGroupType = (ReligiousGroupType)value;
        OnSelected.InvokeAsync(SelectedReligiousGroupType);
    }
}
