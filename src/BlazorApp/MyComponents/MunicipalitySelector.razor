@using PensionCoach.Tools.CommonTypes.Tax
@using Radzen
@using Radzen.Blazor

@inject IMunicipalityService MunicipalityService

<RadzenDropDown TextProperty="Name"
                ValueProperty="BfsMunicipalityNumber"
                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                FilterOperator="StringFilterOperator.StartsWith"
                AllowFiltering="true"
                @bind-Value="BfsMunicipalityId"
                Change="HandleChange"
                Data="municipalities"/>

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public int BfsMunicipalityId { get; set; }

    [Parameter]
    public EventCallback<TaxSupportedMunicipalityModel> OnSelected { get; set; }

    private IReadOnlyCollection<TaxSupportedMunicipalityModel> municipalities = new List<TaxSupportedMunicipalityModel>();

    protected override async Task OnInitializedAsync()
    {
        municipalities = (await MunicipalityService.GetTaxSupportingAsync()).ToList();
    }

    private void HandleChange(object value)
    {
        BfsMunicipalityId = (int)value;

        TaxSupportedMunicipalityModel selectedMunicipalityModel =
            municipalities.Single(item => item.BfsMunicipalityNumber == BfsMunicipalityId);

        OnSelected.InvokeAsync(selectedMunicipalityModel);
    }

}
