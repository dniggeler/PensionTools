@using BlazorApp.ViewModels
@using System.Globalization

<MudGrid>
    <MudItem md="12">
        <MudNumericField T="int" Label="Startjahr" Format="n0" Culture="CultureInfo.InvariantCulture" ValueChanged="HandleChangeStartingYear" Value="@GenericDefinition.Year" />
        <MudNumericField T="decimal" Label="Startbetrag" Format="n0" Culture="CultureInfo.InvariantCulture" ValueChanged="HandleChangeInitialAmount" Value="@GenericDefinition.InitialAmount" />
        <MudNumericField T="decimal" Label="Jährlicher Betrag" Format="n0" Culture="CultureInfo.InvariantCulture" ValueChanged="HandleChangeRecurrentAmount" Value="@GenericDefinition.RecurrentAmount" />
        <MudNumericField T="int" Label="Wiederholungen" Format="n0" Culture="CultureInfo.InvariantCulture" ValueChanged="HandleChangeNumberOfPeriods" Value="@GenericDefinition.NumberOfPeriods" />
    </MudItem>
</MudGrid>


@code {
    [Parameter]
    public InvestmentDefinitionViewModel GenericDefinition { get; set; }

    [Parameter]
    public EventCallback<InvestmentDefinitionViewModel> OnChanged { get; set; }

    private void HandleChangeStartingYear(int value)
    {
        GenericDefinition.Year = value;
        OnChanged.InvokeAsync(GenericDefinition);
    }

    private void HandleChangeNumberOfPeriods(int value)
    {
        GenericDefinition.NumberOfPeriods = value;
        OnChanged.InvokeAsync(GenericDefinition);
    }

    private void HandleChangeRecurrentAmount(decimal value)
    {
        GenericDefinition.RecurrentAmount = value;
        OnChanged.InvokeAsync(GenericDefinition);
    }

    private void HandleChangeInitialAmount(decimal value)
    {
        GenericDefinition.InitialAmount = value;
        OnChanged.InvokeAsync(GenericDefinition);
    }
}